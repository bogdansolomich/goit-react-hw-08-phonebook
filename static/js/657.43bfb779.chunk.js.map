{"version":3,"file":"static/js/657.43bfb779.chunk.js","mappings":"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","sources":["components/Section.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/ContactsPage.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding-top: 25px;\n  padding-bottom: 80px;\n`;\n\nexport const StyledLoginSection = styled(StyledSection)`\n  background-color: #eac645;\n`;\n\nexport const StyledContactsSection = styled(StyledLoginSection)``;\n\nexport const SectionTitle = styled.h1`\n  font-size: 72px;\n  text-align: center;\n  color: #303030;\n  margin-bottom: 40px;\n`;\n\nexport const SectionSecondTitle = styled.h2`\n  font-size: 42px;\n  text-align: center;\n  text-transform: uppercase;\n  color: #303030;\n  font-weight: 800;\n  margin-bottom: 40px;\n`;\n\nexport const LoginTitle = styled(SectionSecondTitle)`\n  margin-bottom: 80px;\n`;\n\nexport const SectionText = styled.p`\n  font-size: 28px;\n  text-align: center;\n  color: #303030;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => {\n  return state.contacts.items;\n};\n\nexport const selectLoading = state => {\n  return state.contacts.isLoading;\n};\n\nexport const selectError = state => {\n  return state.contacts.error;\n};\n\nexport const selectFilter = state => {\n  return state.filter;\n};\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact?.name?.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 579px;\n  padding-top: 80px;\n  padding-bottom: 80px;\n  padding-left: 40px;\n  padding-right: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n\n  border-radius: 18px;\n  border: 2px solid #111;\n  background-color: #f6f6f6;\n`;\n\nexport const FormField = styled(Field)`\n  width: 499px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 40px;\n  padding-right: 40px;\n  border-radius: 40px;\n  border: 2px solid #111;\n  outline: none;\n\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: -0.18px;\n  text-transform: uppercase;\n\n  &:focus {\n    border: 2px solid #4f2ee8;\n  }\n`;\n\nexport const StyledErrorMsg = styled(ErrorMessage)`\n  color: #4f2ee8;\n`;\n\nexport const AddBtn = styled.button`\n  width: 499px;\n  height: 64px;\n  padding: 0;\n  border: transparent;\n  border-radius: 40px;\n  background-color: #111;\n\n  color: #f3f3f3;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: -0.18px;\n  text-transform: uppercase;\n\n  transition: background-color 250ms ease-in;\n\n  &:is(:hover, :focus) {\n    background-color: #4f2ee8;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: #111;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: -0.18px;\n  text-transform: uppercase;\n`;\n","import { Formik } from 'formik';\nimport {\n  StyledForm,\n  FormField,\n  StyledErrorMsg,\n  AddBtn,\n  FormLabel,\n} from './ContactForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport toast from 'react-hot-toast';\n\nconst ContactFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(\n      \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  number: Yup.string()\n    .min(9, 'Phone number must contain at least 9 symbols!')\n    .max(13, 'Phone number must contain less than 13 symbols!')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactFormSchema}\n      onSubmit={(values, actions) => {\n        const isContactInList = contacts.some(\n          contact => contact.name.toLowerCase() === values.name.toLowerCase()\n        );\n\n        if (isContactInList) {\n          toast.error(`${values.name} is already in contacts.`, {\n            duration: 5000,\n          });\n\n          return;\n        }\n\n        dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <FormLabel>\n          Name\n          <FormField name=\"name\" type=\"text\" />\n          <StyledErrorMsg component=\"div\" name=\"name\" />\n        </FormLabel>\n\n        <FormLabel>\n          Number\n          <FormField name=\"number\" type=\"tel\" />\n          <StyledErrorMsg component=\"div\" name=\"number\" />\n        </FormLabel>\n        <AddBtn type=\"submit\">Add contact</AddBtn>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  width: 499px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 40px;\n  padding-right: 40px;\n  border-radius: 40px;\n  border: 2px solid #111;\n  outline: none;\n  margin-bottom: 40px;\n\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: -0.18px;\n  text-transform: uppercase;\n\n  &:focus {\n    border: 2px solid #4f2ee8;\n  }\n`;\n\nexport const FilterText = styled.p`\n  color: #4f2ee8;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: -0.18px;\n  text-transform: uppercase;\n\n  margin-bottom: 8px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { FilterInput, FilterText } from './ContactFilter.styled';\n\nexport const ContactFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <FilterText>Find contacts by name</FilterText>\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={evt => {\n          dispatch(setFilter(evt.target.value));\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DeleteBtn = styled.button`\n  padding: 10px 20px;\n  border: transparent;\n  border-radius: 40px;\n  background-color: #111;\n\n  color: #f3f3f3;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: -0.18px;\n  text-transform: uppercase;\n\n  transition: background-color 250ms ease-in;\n\n  &:is(:hover, :focus) {\n    background-color: #4f2ee8;\n  }\n`;\n\nexport const ContactsText = styled.p`\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: -0.18px;\n  text-transform: uppercase;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactsText, DeleteBtn } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ContactsText>{contact.name}</ContactsText>\n      <ContactsText>{contact.number}</ContactsText>\n      <DeleteBtn onClick={() => dispatch(deleteContact(contact.id))}>\n        Delete\n      </DeleteBtn>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  width: 579px;\n  padding-top: 60px;\n  padding-bottom: 60px;\n  padding-left: 30px;\n  padding-right: 30px;\n\n  border-radius: 18px;\n  border: 2px solid #111;\n  background-color: #f6f6f6;\n`;\n\nexport const ContactsListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 40px;\n  padding-right: 40px;\n  border-radius: 40px;\n  border: 2px solid #111;\n\n  background-color: #fff;\n\n  &:not(:last-child) {\n    margin-bottom: 28px;\n  }\n`;\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\n// import { StyledNotification } from 'components/Notification.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { ContactsList, ContactsListItem } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  return (\n    <>\n      {filteredContacts.length > 0 && (\n        <ContactsList>\n          {filteredContacts.map(contact => (\n            <ContactsListItem key={contact.id}>\n              <ContactListItem contact={contact} />\n            </ContactsListItem>\n          ))}\n        </ContactsList>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 1200;\n`;\n","import { Triangle } from 'react-loader-spinner';\nimport { Backdrop } from './Loader.styled';\nexport const Loader = () => {\n  return (\n    <Backdrop>\n      <Triangle\n        height=\"80\"\n        width=\"80\"\n        radius=\"48\"\n        color=\"#eac645\"\n        ariaLabel=\"watch-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Backdrop>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { Container } from 'components/Container';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport {\n  SectionSecondTitle,\n  StyledContactsSection,\n} from 'components/Section.styled';\nimport { ContactsWrap } from './ContactsPage.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport toast from 'react-hot-toast';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <StyledContactsSection>\n        <Container>\n          {isLoading && !error && <Loader />}\n          {error &&\n            toast.error('Something went wrong, please try reloading the page', {\n              duration: 5000,\n            })}\n          <SectionSecondTitle>Contacts</SectionSecondTitle>\n          <ContactsWrap>\n            <ContactForm />\n            <div>\n              <ContactFilter />\n              <ContactList />\n            </div>\n          </ContactsWrap>\n        </Container>\n      </StyledContactsSection>\n    </>\n  );\n}\n"],"names":["StyledSection","styled","_templateObject","_taggedTemplateLiteral","StyledLoginSection","_templateObject2","StyledContactsSection","_templateObject3","SectionTitle","_templateObject4","SectionSecondTitle","_templateObject5","LoginTitle","_templateObject6","SectionText","_templateObject7","selectContacts","state","contacts","items","selectLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","contact","_contact$name","name","toLowerCase","includes","StyledForm","Form","FormField","Field","StyledErrorMsg","ErrorMessage","AddBtn","FormLabel","ContactFormSchema","Yup","shape","min","max","matches","required","number","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","some","toast","concat","duration","addContact","resetForm","children","_jsxs","type","component","FilterInput","FilterText","ContactFilter","_Fragment","value","onChange","evt","setFilter","target","DeleteBtn","ContactsText","ContactListItem","_ref","onClick","deleteContact","id","ContactsList","ContactsListItem","ContactList","filteredContacts","length","map","ContactsWrap","Backdrop","Loader","Triangle","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Contacts","useEffect","fetchContacts","Container"],"sourceRoot":""}